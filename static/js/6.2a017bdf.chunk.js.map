{"version":3,"sources":["components/content/common/paginator/paginator.module.css","components/content/common/paginator/paginator.js","components/content/users/user.js","components/content/users/users.js","components/content/users/usersSelectors.js","components/content/users/usersContainer.js"],"names":["module","exports","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","Array","from","length","_","k","portionCount","leftPortionPageNumber","rightPortionPageNumber","className","styles","paginator","onClick","filter","p","map","selectedPage","useStyles","makeStyles","root","width","height","margin","media","User","user","followingInProgress","follow","unfollow","classes","Grid","item","Card","CardActionArea","component","NavLink","to","id","CardMedia","image","photos","small","avatar","title","name","CardContent","Typography","gutterBottom","variant","color","status","CardActions","followed","Button","fullWidth","size","disabled","some","userId","Users","totalUsersCount","users","container","style","justifyContent","getUsersSelector","createSelector","state","usersPage","mapDispatchToProps","toggleFollowingProgress","getUsersThunkCreator","connect","isFetching","useEffect","pageNumber"],"mappings":"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","file":"static/js/6.2a017bdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__3rETt\",\"selectedPage\":\"paginator_selectedPage__3hMHp\"};","import styles from \"./paginator.module.css\";\r\nimport {useState} from \"react\";\r\n\r\nexport const Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const pages = Array.from({length: pagesCount}, (_, k) => k + 1);\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            { portionNumber > 1 &&\r\n            <div>\r\n                <button onClick={() => { setPortionNumber(1)}}>First</button>\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>Prev</button>\r\n            </div>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                    .map(p =>\r\n                    <button key={p} className={currentPage === p ? styles.selectedPage : null}\r\n                            onClick={() => onPageChanged(p)}\r\n                    >{p}</button>\r\n                )\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                <div>\r\n                    <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>\r\n                    <button onClick={() => { setPortionNumber(portionCount) }}>Last</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};","import {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../../assets/images/default_avatar.jpg\";\r\nimport {Button, CardActions, Grid} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 270,\r\n        height: 370,\r\n        margin: \"8px\",\r\n    },\r\n    media: {\r\n        height: \"200px\",\r\n    },\r\n});\r\n\r\nexport const User = ({user, followingInProgress, follow, unfollow}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item>\r\n            <Card className={classes.root}>\r\n                <CardActionArea component={NavLink} to={`/profile/${user.id}`}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={user.photos.small ? user.photos.small : avatar}\r\n                        title={user.name}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Name:<br/>${user.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Status: {user.status || \"No status\"}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    {user.followed\r\n                        ? <Button variant={\"contained\"} fullWidth size=\"small\" color=\"primary\"\r\n                                  disabled={followingInProgress.some(userId => userId === user.id)}\r\n                                  onClick={() => unfollow(user.id)}\r\n                        >Unfollow</Button>\r\n                        : <Button variant={\"contained\"} fullWidth size=\"small\" color=\"primary\"\r\n                                  disabled={followingInProgress.some(userId => userId === user.id)}\r\n                                  onClick={() => follow(user.id)}\r\n                        >Follow</Button>\r\n                    }\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};","import {Paginator} from \"../common/paginator/paginator\";\r\nimport {User} from \"./user\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport const Users = ({\r\n                          totalUsersCount, pageSize, currentPage, onPageChanged, follow, unfollow,\r\n                          users, followingInProgress\r\n                      }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}/>\r\n            <Grid container style={{justifyContent: \"center\"}}>\r\n                {\r\n                    users.map(user => (\r\n                            <User key={user.id} user={user} followingInProgress={followingInProgress}\r\n                                         follow={follow} unfollow={unfollow}/>\r\n                        )\r\n                    )\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n};","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsersSelector =\r\n    createSelector(getUsers, (users) => {\r\n        return users;\r\n    });","import {connect} from \"react-redux\";\r\nimport {\r\n    toggleFollowingProgress, getUsersThunkCreator, follow, unfollow\r\n} from \"../../../redux/users-reducer\";\r\nimport {useEffect} from \"react\";\r\nimport {Users} from \"./users\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\nimport {getUsersSelector} from \"./usersSelectors\";\r\n\r\nconst UsersContainer = ({\r\n                            follow, unfollow, users, pageSize, totalUsersCount, currentPage,\r\n                            isFetching, toggleFollowingProgress,\r\n                            followingInProgress, getUsersThunkCreator,\r\n                        }) => {\r\n\r\n    useEffect(() => {\r\n        getUsersThunkCreator(currentPage, pageSize);\r\n    }, [currentPage, getUsersThunkCreator, pageSize]);\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        getUsersThunkCreator(pageNumber, pageSize);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                follow={follow}\r\n                unfollow={unfollow}\r\n                users={users}\r\n                toggleFollowingProgress={toggleFollowingProgress}\r\n                followingInProgress={followingInProgress}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    follow, unfollow, toggleFollowingProgress, getUsersThunkCreator,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"],"sourceRoot":""}