{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/withAuthRedirect.tsx","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","components/content/chat/Message.tsx","components/content/chat/Messages.tsx","components/content/chat/AddMessageForm.tsx","components/content/chat/Chat.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsForRedirect","state","isAuth","auth","createSvgIcon","React","d","WrappedComponent","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","useStyles","makeStyles","marginTop","spacing","marginBottom","text","margin","flexGrow","body","Message","memo","message","useTheme","Grid","container","item","photo","avatar","Typography","userName","Divider","padding","overflowY","Messages","messages","useSelector","chat","messagesAnchorRef","useRef","useEffect","current","scrollTo","Paper","elevation","map","m","index","id","button","AddMessageForm","dispatch","useDispatch","status","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","sendMessage","submitForm","isSubmitting","Box","fullWidth","TextField","label","helperText","Button","disabled","onClick","flexDirection","withAuthRedirect","startMessagesListening","stopMessagesListening","sm","xs","connect","restProps","to"],"mappings":"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","file":"static/js/3.3e4b0e6e.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n} as MapPropsType);\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype DispatchPropsType = {}\r\n\r\nexport function withAuthRedirect<WrappedComponentProps>(WrappedComponent: React.ComponentType<WrappedComponentProps>) {\r\n\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/\"/>\r\n        return <WrappedComponent {...restProps as WrappedComponentProps}/>\r\n    }\r\n\r\n    return connect<MapPropsType, DispatchPropsType, WrappedComponentProps, AppStateType>(mapStateToPropsForRedirect, {})(RedirectComponent)\r\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'circular', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from \"react\"\r\nimport {ChatMessageAPIType} from \"../../../api/chat-api\"\r\nimport avatar from \"../../../assets/images/avatar.svg\"\r\nimport {Avatar, Divider, Grid, Typography} from \"@material-ui/core\"\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    text: {\r\n        margin: theme.spacing(1),\r\n        flexGrow: 1\r\n    },\r\n    body: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}))\r\n\r\nexport const Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n    const theme = useTheme()\r\n    const classes = useStyles(theme)\r\n\r\n    return (\r\n        <Grid container className={classes.root}>\r\n            <Grid item>\r\n                <Avatar alt={\"img\"} src={message.photo || avatar}/>\r\n            </Grid>\r\n            <Grid item className={classes.text}>\r\n                <Typography variant={\"subtitle1\"}>{message.userName}</Typography>\r\n                <Typography className={classes.body} variant={\"body1\"}>{message.message}</Typography>\r\n                <Divider variant={\"fullWidth\"}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n})","import {useSelector} from \"react-redux\"\r\nimport {AppStateType} from \"../../../redux/redux-store\"\r\nimport React, {useEffect, useRef} from \"react\"\r\nimport {Message} from \"./Message\"\r\nimport {Paper} from \"@material-ui/core\"\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        height: 400,\r\n        overflowY: \"auto\",\r\n    }\r\n}))\r\n\r\nexport const Messages = () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const theme = useTheme()\r\n    const classes = useStyles(theme)\r\n\r\n    useEffect(() => {\r\n        messagesAnchorRef.current?.scrollTo(0, 99999);\r\n    }, [messages])\r\n\r\n    return (\r\n        <Paper className={classes.root} elevation={10} ref={messagesAnchorRef}>\r\n            {messages.map((m, index) => <Message key={m.id} message={m}/>)}\r\n        </Paper>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppStateType} from \"../../../redux/redux-store\"\r\nimport {sendMessage} from \"../../../redux/chat-reducer\"\r\nimport {Box, Button} from \"@material-ui/core\"\r\nimport {TextField} from \"formik-material-ui\"\r\nimport {Field, Form, Formik, FormikErrors} from \"formik\"\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\"\r\n\r\ntype MessageFormType = {\r\n    message: string\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}))\r\n\r\nexport const AddMessageForm = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    const theme = useTheme()\r\n    const classes = useStyles(theme)\r\n\r\n    const sendMessageHandler = (message: string) => {\r\n        dispatch(sendMessage(message))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    message: \"\",\r\n                }}\r\n                validate={((values: MessageFormType) => {\r\n                    const errors: FormikErrors<MessageFormType> = {}\r\n                    if (values.message.length === 0) {\r\n                        errors.message = \"Message should be more 1 symbols\"\r\n                    }\r\n                    return errors\r\n                })}\r\n                onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                    setSubmitting(false)\r\n                    resetForm()\r\n                    sendMessageHandler(values.message)\r\n                }}\r\n            >\r\n                {({submitForm, isSubmitting}) => (\r\n                    <Form>\r\n                        <Box margin={1}>\r\n                            <Field\r\n                                fullWidth={true}\r\n                                component={TextField}\r\n                                name={\"message\"}\r\n                                type={\"message\"}\r\n                                label={\"Message\"}\r\n                                helperText={\"Enter your message\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Box>\r\n                        <Box margin={1} className={classes.button}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={isSubmitting || status !== \"ready\"}\r\n                                onClick={submitForm}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </Box>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {startMessagesListening, stopMessagesListening} from \"../../../redux/chat-reducer\"\r\nimport {AppStateType} from \"../../../redux/redux-store\"\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\"\r\nimport {Messages} from \"./Messages\"\r\nimport {AddMessageForm} from \"./AddMessageForm\"\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\"\r\nimport {Grid, Paper, Typography} from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        flexDirection: \"row\"\r\n    },\r\n}))\r\n\r\nconst Chat = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const theme = useTheme()\r\n    const classes = useStyles(theme)\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item sm={5} xs={12}>\r\n                {status === \"error\" && <div>Some error occurred. Please refresh the page</div>}\r\n                <Paper className={classes.root}>\r\n                    <Messages/>\r\n                    <AddMessageForm/>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item sm={7} xs={12}>\r\n                <Paper className={classes.root}>\r\n                    <Typography variant={\"h6\"}>\r\n                        Чат реализован с помощью WebSocket. Вы можете продублировать вкладку сайта и пообщаться с самим\r\n                        собой &#128512;\r\n                    </Typography>\r\n                </Paper>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Chat)"],"sourceRoot":""}