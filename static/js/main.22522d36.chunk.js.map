{"version":3,"sources":["components/content/addMessageForm/addMessageForm.js","redux/dialogs-reducer.js","components/header/drawerComponent.js","api/api.js","redux/auth-reducer.js","components/login/login.js","components/login/loginContainer.js","components/header/header.js","components/header/headerContainer.js","redux/app-reducer.js","components/content/common/preloader/preloader.js","assets/images/welcome-home-welcome-home-de.jpg","components/content/welcome/welcome.js","components/content/notFound/notFound.js","components/content/errorBoundary/errorBoundary.js","components/content/profile/profileInfo/profileStatus.js","components/content/profile/profileInfo/profileDataForm.js","components/content/profile/profileInfo/profileInfo.js","redux/profile-reducer.js","components/content/profile/myPosts/posts/post.js","components/content/profile/myPosts/myPosts.js","components/content/profile/myPosts/my-posts-container.js","components/content/profile/profile.js","components/content/profile/profileContainer.js","utils/object-helpers.js","redux/users-reducer.js","components/content/common/paginator/paginator.js","components/content/users/user.js","components/content/users/users.js","components/content/users/usersSelectors.js","components/content/users/usersContainer.js","components/app/app.js","redux/redux-store.js","index.js","assets/images/avatar.svg","components/content/profile/profileInfo/profileInfo.module.css","components/content/addMessageForm/addMessageForm.module.css","components/content/common/paginator/paginator.module.css"],"names":["AddMessageForm","sendMessage","maxLength","useForm","register","handleSubmit","errors","formState","onSubmit","data","newMessageBody","className","style","formControl","error","type","placeholder","required","value","message","AddMessageFormik","initialValues","input","values","submitForm","isSubmitting","component","TextField","name","label","helperText","width","display","justifyContent","onClick","disabled","SEND_MESSAGE","initialState","dataDialog","id","img","avatar","messages","dialogsReducer","state","action","body","useStyles","makeStyles","theme","drawer","drawerWidth","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","toolbar","alignItems","padding","mixins","DrawerComponent","handleDrawerClose","open","useTheme","classes","history","useHistory","Drawer","variant","clsx","paper","IconButton","direction","Divider","List","ListItem","button","push","ListItemIcon","ListItemText","primary","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","userId","post","delete","profileAPI","status","put","photoFile","formData","FormData","append","profile","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATA","SET_ERROR_LOGIN","GET_CAPTCHA_URL_SUCCESS","login","isAuth","errorMessage","captchaUrl","getCaptchaUrlSuccess","payload","setErrorLogin","setAuthUserData","getAuthUserData","dispatch","a","resultCode","getCaptchaUrl","url","Login","useState","setOpen","handleClose","Button","color","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Typography","validate","test","Box","margin","FormControlLabel","control","Switch","src","alt","backgroundColor","DialogActions","mapDispatchToProps","connect","auth","to","root","appBar","zIndex","menuButton","marginRight","hide","title","marginLeft","empty","flexGrow","Header","logout","darkMode","setDarkMode","AppBar","position","Toolbar","edge","noWrap","INITIALIZED_SUCCESS","initialized","Preloader","LinearProgress","marginBottom","height","Welcome","welcome","NotFound","ErrorBoundary","errorInfo","this","setState","console","log","props","children","React","Component","ProfileStatus","updateUserStatus","isOwner","editMode","setEditMode","localStatus","setLocalStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","defaultValue","onDoubleClick","ProfileDataForm","saveProfile","setErrors","defaultValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","catch","reject","map","elem","Object","keys","key","contact","ProfileInfo","savePhoto","descriptionBlock","photos","large","goToEditMode","target","files","length","ProfileData","contactTitle","contactValue","Contact","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","setStatus","getUserProfile","info","marginTop","content","flexDirection","borderRadius","Post","Card","CardContent","align","MyPosts","addPost","newPostText","profilePage","Profile","Grid","container","item","Paper","getUserStatus","file","getState","Promise","compose","authorizedUserId","useParams","updateObjectInArray","items","itemId","objPropName","newObjProps","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","Paginator","totalItemsCount","onPageChanged","portionSize","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","Array","from","_","k","portionCount","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","filter","p","selectedPage","media","User","user","follow","unfollow","CardActionArea","NavLink","CardMedia","image","small","gutterBottom","CardActions","followed","fullWidth","size","some","useStyle","flexWrap","cards","Users","getUsersSelector","createSelector","usersPage","getUsersThunkCreator","page","totalCount","pageNumber","DialogsContainer","lazy","initializeApp","app","createMuiTheme","palette","main","secondary","preloader","ThemeProvider","CssBaseline","fallback","path","exact","ProfileContainer","UsersContainer","reducers","combineReducers","newPost","postId","dialogsPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","basename","process","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.22522d36.chunk.js","sourcesContent":["import {useForm} from \"react-hook-form\";\r\nimport style from \"./addMessageForm.module.css\";\r\nimport {Form, Formik, Field} from \"formik\";\r\nimport {Box, Button} from \"@material-ui/core\";\r\nimport {TextField} from \"formik-material-ui\";\r\n\r\nexport const AddMessageForm = ({sendMessage, maxLength}) => {\r\n    const {register, handleSubmit, formState: {errors}} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        sendMessage(data.newMessageBody);\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className={style.formControl}>\r\n                <div>\r\n                <textarea className={errors.newMessageBody ? style.error : \"\"}\r\n                          type=\"text\" placeholder={\"Enter your message\"}\r\n                          {...register(\"newMessageBody\", ({\r\n                              required: \"Field is required\",\r\n                              maxLength: {value: maxLength, message: `Max length is ${maxLength} symbols`}\r\n                          }))}/>\r\n                </div>\r\n                {errors.newMessageBody && <span>{errors.newMessageBody.message}</span>}\r\n                <input type=\"submit\" value={\"Send\"}/>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddMessageFormik = ({sendMessage}) => {\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{input: \"\"}}\r\n            onSubmit={(values => sendMessage(values.input))}\r\n        >\r\n            {({submitForm, isSubmitting}) => (\r\n                <Form>\r\n                    <Box>\r\n                        <Field component={TextField} name={\"input\"} label={\"Add new post\"}\r\n                               helperText={\"Enter your message\"} style={{width: 250}}>\r\n                        </Field>\r\n                        <Box style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                            <Button onClick={submitForm} disabled={isSubmitting}>\r\n                                Send\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};","import avatar from \"../assets/images/avatar.svg\"\r\n\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nconst initialState = {\r\n    dataDialog: [\r\n        {id: 1, name: \"Dimych\", img: avatar},\r\n        {id: 2, name: \"Andrey\", img: avatar},\r\n        {id: 3, name: \"Sveta\", img: avatar},\r\n        {id: 4, name: \"Sasha\", img: avatar},\r\n        {id: 5, name: \"Victor\", img: avatar},\r\n        {id: 6, name: \"Valera\", img: avatar},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you?\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessage = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});","import clsx from \"clsx\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {Drawer, List, Divider, ListItem, ListItemIcon, ListItemText, IconButton} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport {drawerWidth} from \"./header\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n}));\r\n\r\nexport const DrawerComponent = ({handleDrawerClose, open}) => {\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === \"rtl\" ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                </IconButton>\r\n            </div>\r\n            <Divider/>\r\n            <List>\r\n                <ListItem button onClick={() => history.push(\"/profile\")}>\r\n                    <ListItemIcon><AccountBoxIcon/></ListItemIcon>\r\n                    <ListItemText primary={\"Profile\"}/>\r\n                </ListItem>\r\n                <ListItem button onClick={() => history.push(\"/dialogs\")}>\r\n                    <ListItemIcon><QuestionAnswerIcon/></ListItemIcon>\r\n                    <ListItemText primary={\"Dialogs\"}/>\r\n                </ListItem>\r\n                <ListItem button onClick={() => history.push(\"/users\")}>\r\n                    <ListItemIcon><GroupIcon/></ListItemIcon>\r\n                    <ListItemText primary={\"Users\"}/>\r\n                </ListItem>\r\n            </List>\r\n        </Drawer>\r\n    );\r\n};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"b45f20e6-c418-486d-bf45-21bf8191b135\"\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\r\nconst SET_ERROR_LOGIN = \"auth/SET_ERROR_LOGIN\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"auth/GET_CAPTCHA_URL_SUCCESS\";\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    errorMessage: null,\r\n    captchaUrl: null, // if null, then captcha is not required\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        case SET_ERROR_LOGIN:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\nexport const setErrorLogin = (errorMessage) => ({type: SET_ERROR_LOGIN, errorMessage});\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        const {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        dispatch(setErrorLogin(response.data.messages[0]));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};","import {\r\n    Button, Dialog, DialogActions, Box, FormControlLabel,\r\n    DialogContent, DialogContentText, DialogTitle, Typography\r\n} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport {Switch, TextField} from \"formik-material-ui\";\r\n\r\nexport const Login = ({errorMessage, login, captchaUrl}) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        login(data.email, data.password, data.rememberMe, data.captcha);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n                Login\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant={\"subtitle1\"}>Please use test email: </Typography>\r\n                        <Typography variant={\"h4\"}>free@samuraijs.com</Typography>\r\n                        <Typography variant={\"subtitle1\"}>Please use test password: </Typography>\r\n                        <Typography variant={\"h4\"}>free</Typography>\r\n                    </DialogContentText>\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: \"free@samuraijs.com\",\r\n                            password: \"free\",\r\n                        }}\r\n                        validate={(values) => {\r\n                            const errors = {};\r\n                            if (!values.email) {\r\n                                errors.email = 'Required';\r\n                            } else if (\r\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n                            ) {\r\n                                errors.email = 'Invalid email address';\r\n                            }\r\n                            return errors;\r\n                        }}\r\n                        onSubmit={values => onSubmit(values)}\r\n                    >\r\n                        {({submitForm}) => (\r\n                            <Form>\r\n                                <Box margin={1}>\r\n                                    <Field\r\n                                        component={TextField}\r\n                                        name={\"email\"}\r\n                                        type={\"email\"}\r\n                                        label={\"Email\"}\r\n                                        helperText={\"email\"}\r\n                                    />\r\n                                </Box>\r\n                                <Box margin={1}>\r\n                                    <Field\r\n                                        component={TextField}\r\n                                        type=\"password\"\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                    />\r\n                                </Box>\r\n                                <Box margin={1}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Field component={Switch} type=\"checkbox\" name=\"rememberMe\"/>\r\n                                        }\r\n                                        label=\"Remember me\"\r\n                                    />\r\n                                </Box>\r\n                                <Box margin={1}>\r\n                                    {captchaUrl && <img style={{display: \"inherit\"}} src={captchaUrl} alt=\"captcha\"/>}\r\n                                    {captchaUrl &&\r\n                                    <Field\r\n                                        component={TextField}\r\n                                        type=\"captcha\"\r\n                                        label=\"Captcha\"\r\n                                        name=\"captcha\"\r\n                                    />}\r\n                                    {errorMessage && <Box margin={2}><Typography variant={\"subtitle1\"} style={{\r\n                                        color: \"red\",\r\n                                        backgroundColor: \"white\"\r\n                                    }}>{errorMessage}</Typography></Box>}\r\n                                </Box>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                    <Button onClick={submitForm}>\r\n                                        Login\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport {login, setErrorLogin} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Login} from \"./login\";\r\n\r\nconst LoginContainer = ({isAuth, login, errorMessage, captchaUrl}) => {\r\n    if (isAuth) {\r\n        return <Redirect to={\"profile\"}/>;\r\n    }\r\n\r\n    return (\r\n            <Login errorMessage={errorMessage} login={login} captchaUrl={captchaUrl}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        errorMessage: state.auth.errorMessage,\r\n        captchaUrl: state.auth.captchaUrl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    login, setErrorLogin,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {AppBar, Toolbar, Typography, IconButton, Button} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {DrawerComponent} from \"./drawerComponent\";\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LoginContainer from \"../login/loginContainer\";\r\n\r\nexport const drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    toolbar: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n    title: {\r\n        marginLeft: 20,\r\n    },\r\n    login: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    empty: {\r\n        flexGrow: 1,\r\n    },\r\n    name: {\r\n        marginRight: 12,\r\n    }\r\n}));\r\n\r\nexport const Header = ({isAuth, login, logout, darkMode, setDarkMode}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={classes.appBar}\r\n            >\r\n                <Toolbar className={classes.toolbar}>\r\n                    {open\r\n                        ? <IconButton onClick={handleDrawerClose} color={\"inherit\"} edge=\"start\">\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                        : <IconButton color=\"inherit\" onClick={handleDrawerOpen} edge=\"start\">\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                    }\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        Social network\r\n                    </Typography>\r\n                    <div className={classes.empty}/>\r\n                    <div className={classes.login}>\r\n                        <IconButton color={\"secondary\"} onClick={() => setDarkMode(!darkMode)}>\r\n                            <Brightness4Icon/>\r\n                        </IconButton>\r\n                        <div>\r\n                            {isAuth\r\n                                ? <div className={classes.login}>\r\n                                    <Typography className={classes.name} variant={\"h6\"}>{login}</Typography>\r\n                                    <Button color={\"secondary\"} variant=\"outlined\" onClick={logout}>Log out</Button>\r\n                                </div>\r\n                                : <LoginContainer/>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <DrawerComponent open={open} handleDrawerClose={handleDrawerClose}/>\r\n        </div>\r\n    );\r\n};\r\n","import {Header} from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nconst HeaderContainer = ({isAuth, login, logout, darkMode, setDarkMode}) => {\r\n    return (\r\n        <Header isAuth={isAuth} login={login} logout={logout} darkMode={darkMode} setDarkMode={setDarkMode}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    const promise =  dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};","import {LinearProgress} from \"@material-ui/core\";\r\nimport {useTheme} from \"@material-ui/core/styles\";\r\n\r\nexport const Preloader = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <LinearProgress style={{\r\n            backgroundColor: \"#303030\",\r\n            marginBottom: theme.spacing(2),\r\n        }}/>\r\n    );\r\n};","export default __webpack_public_path__ + \"static/media/welcome-home-welcome-home-de.842af542.jpg\";","import welcome from \"../../../assets/images/welcome-home-welcome-home-de.jpg\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: \"80vh\",\r\n    }\r\n});\r\n\r\nexport const Welcome = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <img className={classes.root} src={welcome} alt=\"welcome\"/>\r\n        </div>\r\n    );\r\n};","\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>Not Found</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    state = {\r\n        error: false\r\n    };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({error: true});\r\n        console.log(errorInfo)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <img src=\"https://miro.medium.com/max/700/1*v4dLIlWpJkCiSDKv7xguLA.png\" alt=\"error\"/>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}","import {Preloader} from \"../../common/preloader/preloader\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport const ProfileStatus = ({profile, status, updateUserStatus, isOwner}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [localStatus, setLocalStatus] = useState();\r\n\r\n    useEffect(() => {\r\n        setLocalStatus(status);\r\n    }, [status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        updateUserStatus(localStatus);\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    };\r\n\r\n    if (!profile) return <Preloader/>;\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <div>\r\n                        <b>Status: </b>\r\n                        <span onDoubleClick={isOwner ? () => activateEditMode() : null}>{localStatus || \"No status\"}</span>\r\n                    </div>\r\n\r\n                </div>\r\n                : <div>\r\n                    <input onChange={onChange}\r\n                           autoFocus={true} onBlur={() => deactivateEditMode()}\r\n                           type=\"text\" defaultValue={localStatus}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","import {useForm} from \"react-hook-form\";\r\nimport style from \"./profileInfo.module.css\";\r\nimport {useState} from \"react\";\r\n\r\nexport const ProfileDataForm = ({profile, saveProfile, setEditMode}) => {\r\n    const [errors, setErrors] = useState([]);\r\n    const {register, handleSubmit} = useForm({\r\n        defaultValues: {\r\n            fullName: profile.fullName,\r\n            lookingForAJob: profile.lookingForAJob,\r\n            lookingForAJobDescription: profile.lookingForAJobDescription,\r\n            aboutMe: profile.aboutMe,\r\n            contacts: {\r\n                facebook: profile.contacts.facebook,\r\n                website: profile.contacts.website,\r\n                vk: profile.contacts.vk,\r\n                twitter: profile.contacts.twitter,\r\n                instagram: profile.contacts.instagram,\r\n                youtube: profile.contacts.youtube,\r\n                github: profile.contacts.github,\r\n                mainLink: profile.contacts.mainLink,\r\n            }\r\n        }\r\n    });\r\n    const onSubmit = (data) => {\r\n        saveProfile(data)\r\n            .then(() => setEditMode(false))\r\n            .catch(reject => setErrors(reject))\r\n\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n                <div>\r\n                    <button>save</button>\r\n                </div>\r\n                {errors.map(elem =>\r\n                    <div className={style.error} key={elem}>\r\n                        {elem}\r\n                    </div>)\r\n                }\r\n                <div>\r\n                    <div>\r\n                        <b>Full name: </b>\r\n                        <div>\r\n                            <input type=\"text\" placeholder={\"Full name\"}{...register(\"fullName\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <b>Looking for a job: </b>\r\n                        <div>\r\n                            <input type=\"checkbox\" {...register(\"lookingForAJob\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <b>My professional skills: </b>\r\n                        <div>\r\n                            <textarea type=\"text\"\r\n                                      placeholder={\"My professional skills\"}{...register(\"lookingForAJobDescription\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <b>About me: </b>\r\n                        <div>\r\n                            <textarea type=\"text\" placeholder={\"About me\"}{...register(\"aboutMe\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <b>Contacts: </b>\r\n                        <div>\r\n                            {\r\n                                Object.keys(profile.contacts)\r\n                                    .map(key =>\r\n                                        <div key={key} className={style.contact}>\r\n                                            <b>{key}: </b>\r\n                                            <input type=\"text\" placeholder={key}{...register(`contacts.${key}`)}/>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};","import style from \"./profileInfo.module.css\";\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\nimport {ProfileStatus} from \"./profileStatus\";\r\nimport avatar from \"../../../../assets/images/avatar.svg\";\r\nimport {useState} from \"react\";\r\nimport {ProfileDataForm} from \"./profileDataForm\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\n\r\nexport const ProfileInfo = ({\r\n                                profile,\r\n                                status,\r\n                                updateUserStatus,\r\n                                isOwner,\r\n                                savePhoto,\r\n                                saveProfile,\r\n                            }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    if (!profile) return <Preloader/>;\r\n    return (\r\n        <div>\r\n            <div className={style.descriptionBlock}>\r\n                <img className={style.avatar} src={profile.photos.large || avatar} alt=\"img\"/>\r\n                {editMode\r\n                    ? <ProfileDataForm profile={profile} saveProfile={saveProfile} setEditMode={setEditMode}\r\n                    />\r\n                    : <ProfileData profile={profile} goToEditMode={() => setEditMode(true)} isOwner={isOwner}/>\r\n                }\r\n                <ProfileStatus profile={profile} status={status} updateUserStatus={updateUserStatus} isOwner={isOwner}/>\r\n            </div>\r\n            {isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <button onClick={goToEditMode}>edit</button>}\r\n            <div>\r\n                <Typography variant={\"subtitle1\"}>Full name:</Typography>\r\n                <Typography variant={\"subtitle2\"}>{profile.fullName}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography variant={\"subtitle1\"}>Looking for a job:</Typography>\r\n                <Typography variant={\"subtitle2\"}>{profile.lookingForAJob ? \"yes\" : \"no\"}</Typography>\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <Typography variant={\"subtitle1\"}>My professional skills:</Typography>\r\n                <Typography variant={\"subtitle2\"}>{profile.lookingForAJobDescription}</Typography>\r\n            </div>\r\n            }\r\n            <div>\r\n                <Typography variant={\"subtitle1\"}>About me:</Typography>\r\n                <Typography variant={\"subtitle2\"}>{profile.aboutMe}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography variant={\"subtitle1\"}>Contacts:</Typography>\r\n                {\r\n                    Object.keys(profile.contacts)\r\n                        .map(key =>\r\n                            <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    // if (!contactValue) return null\r\n    return (\r\n        <div className={style.contact}>\r\n            <Typography variant={\"subtitle1\"}>{contactTitle}: </Typography>{contactValue}\r\n        </div>\r\n    );\r\n};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"profile/ADD_POST\";\r\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"profile/SET_STATUS\";\r\nconst DELETE_POST = \"profile/DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"profile/SAVE_PHOTO_SUCCESS\";\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 11},\r\n        {id: 2, message: \"It's my first post\", likesCount: 22},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\",\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photos\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile: profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status: status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        return Promise.reject(response.data.messages);\r\n    }\r\n};","import avatar from \"../../../../../assets/images/avatar.svg\"\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    info: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    img: {\r\n        height: \"100px\",\r\n        borderRadius: \"50%\",\r\n        marginBottom: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport const Post = ({message, likesCount}) => {\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n\r\n    return (\r\n        <Card className={classes.info}>\r\n            <CardContent className={classes.content}>\r\n                <img className={classes.img} src={avatar} alt=\"avatar\"/>\r\n                <div>\r\n                    <Typography variant={\"body1\"} align={\"center\"}>\r\n                        {message}\r\n                    </Typography>\r\n                    <Typography variant={\"body2\"} align={\"left\"}>\r\n                        like: {likesCount}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};","import {Post} from \"./posts/post\";\r\nimport {AddMessageFormik} from \"../../addMessageForm/addMessageForm\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nexport const MyPosts = ({posts, addPost}) => {\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n\r\n    return (\r\n        <div>\r\n            <Card >\r\n                <CardContent>\r\n                    <Typography className={classes.title} variant={\"h5\"}>My Posts</Typography>\r\n                    <AddMessageFormik sendMessage={addPost}/>\r\n                </CardContent>\r\n            </Card>\r\n            <div>\r\n                {\r\n                    posts.map(elem => <Post key={elem.id} message={elem.message} likesCount={elem.likesCount}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};","import {connect} from \"react-redux\";\r\nimport {addPost} from \"../../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./myPosts\";\r\n\r\nconst MyPostsContainer = ({posts, addPost}) => {\r\n    return (\r\n        <MyPosts posts={posts} addPost={addPost}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addPost,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);","import {ProfileInfo} from \"./profileInfo/profileInfo\";\r\nimport MyPostsContainer from \"./myPosts/my-posts-container\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    info: {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nexport const Profile = ({profile, status, updateUserStatus, isOwner, savePhoto, saveProfile}) => {\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n\r\n    if (!profile) return <Preloader/>;\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item>\r\n                <Paper className={classes.info}>\r\n                    <ProfileInfo profile={profile} status={status} updateUserStatus={updateUserStatus} isOwner={isOwner}\r\n                                 savePhoto={savePhoto}\r\n                                 saveProfile={saveProfile}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item className={classes.paper}>\r\n                <MyPostsContainer/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import {Profile} from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../../redux/profile-reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\nconst ProfileContainer = ({\r\n                              profile, status, authorizedUserId,\r\n                              getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile,\r\n                          }) => {\r\n\r\n    let userId = useParams().userId || authorizedUserId || 16528;\r\n\r\n    useEffect(() => {\r\n        getUserProfile(userId);\r\n        getUserStatus(userId);\r\n    }, [getUserStatus, getUserProfile, userId]);\r\n\r\n    return (\r\n        <Profile profile={profile} status={status} updateUserStatus={updateUserStatus}\r\n                 isOwner={userId === authorizedUserId} savePhoto={savePhoto}\r\n                 saveProfile={saveProfile}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile,\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), /*withAuthRedirect*/)(ProfileContainer);","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps};\r\n        }\r\n        return i;\r\n    });\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        const response = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount));\r\n    };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow, followSuccess);\r\n    };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow, unfollowSuccess);\r\n    };\r\n};","import styles from \"./paginator.module.css\";\r\nimport {useState} from \"react\";\r\nimport {Button, IconButton} from \"@material-ui/core\";\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\nexport const Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const pages = Array.from({length: pagesCount}, (_, k) => k + 1);\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            { portionNumber > 1 &&\r\n            <div>\r\n                <IconButton onClick={() => { setPortionNumber(1)}}>\r\n                    <FirstPageIcon/>\r\n                </IconButton>\r\n                <IconButton onClick={() => { setPortionNumber(portionNumber - 1) }}>\r\n                    <NavigateBeforeIcon/>\r\n                </IconButton>\r\n            </div>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                    .map(p =>\r\n                    <Button key={p} className={currentPage === p ? styles.selectedPage : null}\r\n                            onClick={() => onPageChanged(p)}\r\n                    >{p}</Button>\r\n                )\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                <div>\r\n                    <IconButton onClick={() => { setPortionNumber(portionNumber + 1) }}>\r\n                        <NavigateNextIcon/>\r\n                    </IconButton>\r\n                    <IconButton onClick={() => { setPortionNumber(portionCount)}}>\r\n                        <LastPageIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};","import {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../../assets/images/avatar.svg\";\r\nimport {Button, CardActions, Grid} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 270,\r\n        height: 370,\r\n        margin: \"8px\",\r\n    },\r\n    media: {\r\n        height: \"200px\",\r\n    },\r\n});\r\n\r\nexport const User = ({user, followingInProgress, follow, unfollow}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item>\r\n            <Card className={classes.root}>\r\n                <CardActionArea component={NavLink} to={`/profile/${user.id}`}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={user.photos.small ? user.photos.small : avatar}\r\n                        title={user.name}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography noWrap gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Name:<br/>${user.name}\r\n                        </Typography>\r\n                        <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Status: {user.status || \"No status\"}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    {user.followed\r\n                        ? <Button variant={\"contained\"} fullWidth size=\"small\"\r\n                                  disabled={followingInProgress.some(userId => userId === user.id)}\r\n                                  onClick={() => unfollow(user.id)}\r\n                        >Unfollow</Button>\r\n                        : <Button variant={\"contained\"} fullWidth size=\"small\"\r\n                                  disabled={followingInProgress.some(userId => userId === user.id)}\r\n                                  onClick={() => follow(user.id)}\r\n                        >Follow</Button>\r\n                    }\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};","import {Paginator} from \"../common/paginator/paginator\";\r\nimport {User} from \"./user\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    cards: {\r\n        margin: 20,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n    }\r\n});\r\n\r\nexport const Users = ({\r\n                          totalUsersCount, pageSize, currentPage, onPageChanged, follow, unfollow,\r\n                          users, followingInProgress\r\n                      }) => {\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <Grid container className={classes.root}>\r\n            <Grid item>\r\n                <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\r\n                           onPageChanged={onPageChanged}/>\r\n            </Grid>\r\n            <Grid item className={classes.cards}>\r\n                {\r\n                    users.map(user => (\r\n                            <User key={user.id} user={user} followingInProgress={followingInProgress}\r\n                                  follow={follow} unfollow={unfollow}/>\r\n                        )\r\n                    )\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsersSelector =\r\n    createSelector(getUsers, (users) => {\r\n        return users;\r\n    });","import {connect} from \"react-redux\";\r\nimport {\r\n    toggleFollowingProgress, getUsersThunkCreator, follow, unfollow\r\n} from \"../../../redux/users-reducer\";\r\nimport {useEffect} from \"react\";\r\nimport {Users} from \"./users\";\r\nimport {getUsersSelector} from \"./usersSelectors\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\n\r\nconst UsersContainer = ({\r\n                            follow, unfollow, users, pageSize, totalUsersCount, currentPage,\r\n                            isFetching, toggleFollowingProgress,\r\n                            followingInProgress, getUsersThunkCreator,\r\n                        }) => {\r\n\r\n    useEffect(() => {\r\n        getUsersThunkCreator(currentPage, pageSize);\r\n    }, [currentPage, getUsersThunkCreator, pageSize]);\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        getUsersThunkCreator(pageNumber, pageSize);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isFetching ?\r\n                <Preloader/> : null\r\n            }\r\n            <Users\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                follow={follow}\r\n                unfollow={unfollow}\r\n                users={users}\r\n                toggleFollowingProgress={toggleFollowingProgress}\r\n                followingInProgress={followingInProgress}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    follow, unfollow, toggleFollowingProgress, getUsersThunkCreator,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","import {lazy, Suspense, useState} from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport HeaderContainer from \"../header/headerContainer\";\r\nimport {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"../../redux/app-reducer\";\r\nimport {Preloader} from \"../content/common/preloader/preloader\";\r\nimport {Welcome} from \"../content/welcome/welcome\";\r\nimport {NotFound} from \"../content/notFound/notFound\";\r\nimport ErrorBoundary from \"../content/errorBoundary/errorBoundary\";\r\nimport {ThemeProvider} from \"@material-ui/core/styles\";\r\nimport {CssBaseline, Grid} from \"@material-ui/core\";\r\nimport {createMuiTheme} from '@material-ui/core/styles';\r\nimport ProfileContainer from \"../content/profile/profileContainer\";\r\nimport UsersContainer from \"../content/users/usersContainer\";\r\n\r\nconst DialogsContainer = lazy(() => import(\"../content/dialogs/dialogs-container\"));\r\n\r\nconst App = ({initialized, initializeApp}) => {\r\n    const [darkMode, setDarkMode] = useState(true);\r\n    useEffect(() => {\r\n        initializeApp();\r\n    }, [initializeApp]);\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: darkMode ? \"dark\" : \"light\",\r\n            primary: {\r\n                main: \"#FFFFFFFF\",\r\n            },\r\n            secondary: {\r\n                main: \"#000000FF\"\r\n            },\r\n        }\r\n    });\r\n\r\n    const preloader = (\r\n        <div className={\"app-wrapper\"}>\r\n            <Preloader/>\r\n        </div>\r\n    );\r\n\r\n    if (!initialized) return preloader;\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <Grid container direction={\"column\"}>\r\n                <ErrorBoundary>\r\n                    <Grid item>\r\n                        <HeaderContainer darkMode={darkMode} setDarkMode={setDarkMode}/>\r\n                    </Grid>\r\n                    <Grid item style={{margin: 56, padding: 24}}>\r\n                        <Suspense fallback={preloader}>\r\n                            <Switch>\r\n                                <Route path={\"/\"} exact component={Welcome}/>\r\n                                <Route path={\"/profile/:userId?\"} component={ProfileContainer}/>\r\n                                <Route path={\"/dialogs\"} component={DialogsContainer}/>\r\n                                <Route path={\"/users\"} component={UsersContainer}/>\r\n                                <Route component={NotFound}/>\r\n                            </Switch>\r\n                        </Suspense>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    initializeApp,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store =\r\n    createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport {store} from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        {/*HashRouter for github pages / BrowserRouter*/}\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","export default __webpack_public_path__ + \"static/media/avatar.4084d3ab.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgImg\":\"profileInfo_bgImg__3Ay7A\",\"descriptionBlock\":\"profileInfo_descriptionBlock__2S594\",\"avatar\":\"profileInfo_avatar__zeCMj\",\"contact\":\"profileInfo_contact__3jMB8\",\"error\":\"profileInfo_error__3iHhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"addMessageForm_formControl__2AMq-\",\"error\":\"addMessageForm_error__mgWRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__3rETt\",\"selectedPage\":\"paginator_selectedPage__3hMHp\"};"],"sourceRoot":""}